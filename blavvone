make: вход в каталог «/home/ilya/printf»
make: *** Нет правила для сборки цели «re».  Останов.
make: выход из каталога «/home/ilya/printf»
FAILED TESTS:\n
# TEST NUMBER (TYPE OF ARG)
  INSTRUCTION();
  1. your function ft_printf
  2. unix function printf
     (returned value) -->written on stdout<--

# 0006 
  ft_printf("%%");
  1. (    0) --><--
  2. (    1) -->%<--

# 0007 
  ft_printf("%5%");
  1. (    0) --><--
  2. (    1) -->%<--

# 0008 
  ft_printf("%-5%");
  1. (    0) --><--
  2. (    1) -->%<--

# 0009 
  ft_printf("%.0%");
  1. (    0) --><--
  2. (    1) -->%<--

# 0010 (char *)
  ft_printf("%%", "test");
  1. (    0) --><--
  2. (    1) -->%<--

# 0011 (char *)
  ft_printf("%   %", "test");
  1. (    0) --><--
  2. (    1) -->%<--

# 0023 (int)
  ft_printf("%lx", 4294967296);
  1. (    0) --><--
  2. (    9) -->100000000<--

# 0024 (int)
  ft_printf("%llX", 4294967296);
  1. (    1) -->0<--
  2. (    9) -->100000000<--

# 0028 (int)
  ft_printf("%jx", 4294967296);
  1. (    1) -->0<--
  2. (    9) -->100000000<--

# 0029 (int)
  ft_printf("%jx", -4294967296);
  1. (    1) -->0<--
  2. (   16) -->ffffffff00000000<--

# 0030 (int)
  ft_printf("%jx", -4294967297);
  1. (    8) -->ffffffff<--
  2. (   16) -->fffffffeffffffff<--

# 0031 (int)
  ft_printf("%llx", 9223372036854775807);
  1. (    8) -->ffffffff<--
  2. (   16) -->7fffffffffffffff<--

# 0032 (int)
  ft_printf("%llx", 9223372036854775808);
  1. (    8) -->ffffffff<--
  2. (   16) -->7fffffffffffffff<--

# 0039 (int)
  ft_printf("%#llx", 9223372036854775807);
  1. (   10) -->0xffffffff<--
  2. (   18) -->0x7fffffffffffffff<--

# 0040 (int)
  ft_printf("%#x", 0);
  1. (    3) -->0x0<--
  2. (    1) -->0<--

# 0045 (int)
  ft_printf("%#-08x", 42);
  1. (    8) -->0x00002a<--
  2. (    8) -->0x2a    <--

# 0046 (int)
  ft_printf("@moulitest: %#.x %#.0x", 0, 0);
  1. (   13) -->@moulitest: 0x 0x<--
  2. (   13) -->@moulitest:  <--

# 0049 (char *)
  ft_printf("%s", "abc");
  1. (    0) --><--
  2. (    3) -->abc<--

# 0050 (char *)
  ft_printf("%s", "this is a string");
  1. (    0) --><--
  2. (   16) -->this is a string<--

# 0051 (char *)
  ft_printf("%s ", "this is a string");
  1. (    0) --><--
  2. (   17) -->this is a string <--

# 0052 (char *)
  ft_printf("%s  ", "this is a string");
  1. (    0) --><--
  2. (   18) -->this is a string  <--

# 0053 (char *)
  ft_printf("this is a %s", "string");
includes/projects/ft_printf/ft_printf_main.sh: строка 198: printf: this is a : недопустимое число
  1. (    0) -->this is a <--
  2. (   16) -->this is a string<--

# 0054 (char *)
  ft_printf("%s is a string", "this");
  1. (    0) --><--
  2. (   16) -->this is a string<--

# 0055 (char *)
  ft_printf("Line Feed %s", "\\n");
includes/projects/ft_printf/ft_printf_main.sh: строка 198: printf: Line Feed : недопустимое число
  1. (    0) -->Line Feed <--
  2. (   12) -->Line Feed \\n<--

# 0056 (char *)
  ft_printf("%10s is a string", "this");
  1. (    0) --><--
  2. (   22) -->      this is a string<--

# 0057 (char *)
  ft_printf("%.2s is a string", "this");
  1. (    0) --><--
  2. (   14) -->th is a string<--

# 0058 (char *)
  ft_printf("%5.2s is a string", "this");
  1. (    0) --><--
  2. (   17) -->   th is a string<--

# 0059 (char *)
  ft_printf("%10s is a string", "");
  1. (    0) --><--
  2. (   22) -->           is a string<--

# 0060 (char *)
  ft_printf("%.2s is a string", "");
  1. (    0) --><--
  2. (   12) --> is a string<--

# 0061 (char *)
  ft_printf("%5.2s is a string", "");
  1. (    0) --><--
  2. (   17) -->      is a string<--

# 0062 (char *)
  ft_printf("%-10s is a string", "this");
  1. (    0) --><--
  2. (   22) -->this       is a string<--

# 0063 (char *)
  ft_printf("%-.2s is a string", "this");
  1. (    0) --><--
  2. (   14) -->th is a string<--

# 0064 (char *)
  ft_printf("%-5.2s is a string", "this");
  1. (    0) --><--
  2. (   17) -->th    is a string<--

# 0065 (char *)
  ft_printf("%-10s is a string", "");
  1. (    0) --><--
  2. (   22) -->           is a string<--

# 0066 (char *)
  ft_printf("%-.2s is a string", "");
  1. (    0) --><--
  2. (   12) --> is a string<--

# 0067 (char *)
  ft_printf("%-5.2s is a string", "");
  1. (    0) --><--
  2. (   17) -->      is a string<--

# 0068 (char *)
  ft_printf("%s %s", "this", "is");
  1. (    0) --><--
  2. (    7) -->this is<--

# 0069 (char *)
  ft_printf("%s %s %s", "this", "is", "a");
  1. (    0) --><--
  2. (    9) -->this is a<--

# 0070 (char *)
  ft_printf("%s %s %s %s", "this", "is", "a", "multi");
  1. (    0) --><--
  2. (   15) -->this is a multi<--

# 0071 (char *)
  ft_printf("%s %s %s %s string. gg!", "this", "is", "a", "multi", "string");
  1. (    0) --><--
  2. (   27) -->this is a multi string. gg!<--

# 0072 (char *)
  ft_printf("%s%s%s%s%s", "this", "is", "a", "multi", "string");
  1. (    0) --><--
  2. (   18) -->thisisamultistring<--

# 0073 (NULL)
  ft_printf("@moulitest: %s", NULL);
includes/projects/ft_printf/ft_printf_main.sh: строка 198: printf: @moulitest: : недопустимое число
  1. (    0) -->@moulitest: <--
  2. (   18) -->@moulitest: (null)<--

# 0074 (NULL)
  ft_printf("%.2c", NULL);
  1. (    0) --><--
  2. (    1) -->^@<--

# 0075 (NULL)
  ft_printf("%s %s", NULL, string);
  1. (    0) --><--
  2. (   13) -->(null) string<--

# 0076 (char)
  ft_printf("%c", 42);
  1. (    0) --><--
  2. (    1) -->*<--

# 0077 (char)
  ft_printf("%5c", 42);
  1. (    0) --><--
  2. (    5) -->    *<--

# 0078 (char)
  ft_printf("%-5c", 42);
  1. (    0) --><--
  2. (    5) -->*    <--

# 0079 (char)
  ft_printf("@moulitest: %c", 0);
includes/projects/ft_printf/ft_printf_main.sh: строка 198: printf: @moulitest: : недопустимое число
  1. (    0) -->@moulitest: <--
  2. (   13) -->@moulitest: ^@<--

# 0080 (char)
  ft_printf("%2c", 0);
  1. (    0) --><--
  2. (    2) --> ^@<--

# 0081 (char)
  ft_printf("null %c and text", 0);
includes/projects/ft_printf/ft_printf_main.sh: строка 198: printf: null : недопустимое число
  1. (    0) -->null <--
  2. (   15) -->null ^@ and text<--

# 0082 (char)
  ft_printf("% c", 0);
  1. (    0) --><--
  2. (    1) -->^@<--

# 0089 (int)
  ft_printf("%-05o", 2500);
  1. (    5) -->04704<--
  2. (    5) -->4704 <--

# 0095 (int)
  ft_printf("@moulitest: %#.o %#.0o", 0, 0);
  1. (   13) -->@moulitest: 0 0<--
  2. (   15) -->@moulitest: 0 0<--

# 0104 (int)
  ft_printf("%d", 2147483648);
  1. (   11) -->--(<--
  2. (   11) -->-2147483648<--

# 0105 (int)
  ft_printf("%d", -2147483648);
  1. (   11) -->--(<--
  2. (   11) -->-2147483648<--

# 0134 (int)
  ft_printf("%-05d", 42);
  1. (    5) -->00042<--
  2. (    5) -->42   <--

# 0136 (int)
  ft_printf("%-05d", -42);
  1. (    5) -->-0042<--
  2. (    5) -->-42  <--

# 0139 (short)
  ft_printf("%hd", 32768);
  1. (    5) -->32768<--
  2. (    6) -->-32768<--

# 0142 (signed char)
  ft_printf("%hhd", 128);
  1. (    3) -->128<--
  2. (    4) -->-128<--

# 0144 (signed char)
  ft_printf("%hhd", -129);
  1. (    4) -->-129<--
  2. (    3) -->127<--

# 0145 (long)
  ft_printf("%ld", 2147483647);
  1. (    0) --><--
  2. (   10) -->2147483647<--

# 0146 (long)
  ft_printf("%ld", -2147483648);
  1. (    0) --><--
  2. (   11) -->-2147483648<--

# 0147 (long)
  ft_printf("%ld", 2147483648);
  1. (    0) --><--
  2. (   10) -->2147483648<--

# 0148 (long)
  ft_printf("%ld", -2147483649);
  1. (    0) --><--
  2. (   11) -->-2147483649<--

# 0149 (long long)
  ft_printf("%lld", 9223372036854775807);
  1. (    2) -->-1<--
  2. (   19) -->9223372036854775807<--

# 0150 (long long)
  ft_printf("%lld", -9223372036854775808);
  1. (    1) -->0<--
  2. (   20) -->-9223372036854775808<--

# 0151 (intmax_t)
  ft_printf("%jd", 9223372036854775807);
  1. (    2) -->-1<--
  2. (   19) -->9223372036854775807<--

# 0152 (intmax_t)
  ft_printf("%jd", -9223372036854775808);
  1. (    1) -->0<--
  2. (   20) -->-9223372036854775808<--

# 0153 (ssize_t)
  ft_printf("%zd", 4294967295);
  1. (    2) -->-1<--
  2. (   10) -->4294967295<--

# 0154 (ssize_t)
  ft_printf("%zd", 4294967296);
  1. (    1) -->0<--
  2. (   10) -->4294967296<--

# 0170 (int)
  ft_printf("%03.2d", 0);
  1. (    3) -->000<--
  2. (    3) --> 00<--

# 0171 (int)
  ft_printf("%03.2d", 1);
  1. (    3) -->001<--
  2. (    3) --> 01<--

# 0186 (unsigned int)
  ft_printf("% u", 4294967295);
  1. (    0) --><--
  2. (   10) -->4294967295<--

# 0187 (unsigned int)
  ft_printf("%+u", 4294967295);
  1. (    0) --><--
  2. (   10) -->4294967295<--

# 0188 (unsigned long)
  ft_printf("%lu", 4294967295);
  1. (    0) --><--
  2. (   10) -->4294967295<--

# 0189 (unsigned long)
  ft_printf("%lu", 4294967296);
  1. (    0) --><--
  2. (   10) -->4294967296<--

# 0190 (unsigned long)
  ft_printf("%lu", -42);
  1. (    0) --><--
  2. (   20) -->18446744073709551574<--

# 0191 (unsigned long long)
  ft_printf("%llu", 4999999999);
  1. (    9) -->705032703<--
  2. (   10) -->4999999999<--

# 0192 (intmax_t)
  ft_printf("%ju", 4999999999);
  1. (    9) -->705032703<--
  2. (   10) -->4999999999<--

# 0193 (size_t)
  ft_printf("%ju", 4294967296);
  1. (    1) -->0<--
  2. (   10) -->4294967296<--

# 0194 (unsigned long)
  ft_printf("%U", 4294967295);
  1. (    1) -->U<--
  2. (    2) -->%U<--

# 0195 (unsigned long)
  ft_printf("%hU", 4294967296);
  1. (    1) -->U<--
  2. (    2) -->%U<--

# 0196 (unsigned long)
  ft_printf("%U", 4294967296);
  1. (    1) -->U<--
  2. (    2) -->%U<--
\n--------------\n
SUCCESS TESTS:\n
   1.      ft_printf("");                                -> ""
   2.      ft_printf("\\n");                             -> "\\n"
   3.      ft_printf("test");                            -> "test"
   4.      ft_printf("test\\n");                         -> "test\\n"
   5.      ft_printf("1234");                            -> "1234"
   6. FAIL ft_printf("%%");                              -> "%"
   7. FAIL ft_printf("%5%");                             -> "%"
   8. FAIL ft_printf("%-5%");                            -> "%"
   9. FAIL ft_printf("%.0%");                            -> "%"
  10. FAIL ft_printf("%%", "test");                      -> "%"
  11. FAIL ft_printf("%   %", "test");                   -> "%"
  12.      ft_printf("%x", 42);                          -> "2a"
  13.      ft_printf("%X", 42);                          -> "2A"
  14.      ft_printf("%x", 0);                           -> "0"
  15.      ft_printf("%X", 0);                           -> "0"
  16.      ft_printf("%x", -42);                         -> "ffffffd6"
  17.      ft_printf("%X", -42);                         -> "FFFFFFD6"
  18.      ft_printf("%x", 4294967296);                  -> "0"
  19.      ft_printf("%X", 4294967296);                  -> "0"
  20.      ft_printf("%x", test);                        -> "0"
  21.      ft_printf("%10x", 42);                        -> "        2a"
  22.      ft_printf("%-10x", 42);                       -> "2a        "
  23. FAIL ft_printf("%lx", 4294967296);                 -> "100000000"
  24. FAIL ft_printf("%llX", 4294967296);                -> "100000000"
  25.      ft_printf("%hx", 4294967296);                 -> "0"
  26.      ft_printf("%hhX", 4294967296);                -> "0"
  27.      ft_printf("%jx", 4294967295);                 -> "ffffffff"
  28. FAIL ft_printf("%jx", 4294967296);                 -> "100000000"
  29. FAIL ft_printf("%jx", -4294967296);                -> "ffffffff00000000"
  30. FAIL ft_printf("%jx", -4294967297);                -> "fffffffeffffffff"
  31. FAIL ft_printf("%llx", 9223372036854775807);       -> "7fffffffffffffff"
  32. FAIL ft_printf("%llx", 9223372036854775808);       -> "7fffffffffffffff"
  33.      ft_printf("%010x", 542);                      -> "000000021e"
  34.      ft_printf("%-15x", 542);                      -> "21e            "
  35.      ft_printf("%2x", 542);                        -> "21e"
  36.      ft_printf("%.2x", 5427);                      -> "1533"
  37.      ft_printf("%5.2x", 5427);                     -> " 1533"
  38.      ft_printf("%#x", 42);                         -> "0x2a"
  39. FAIL ft_printf("%#llx", 9223372036854775807);      -> "0x7fffffffffffffff"
  40. FAIL ft_printf("%#x", 0);                          -> "0"
  41.      ft_printf("%#x", 42);                         -> "0x2a"
  42.      ft_printf("%#X", 42);                         -> "0X2A"
  43.      ft_printf("%#8x", 42);                        -> "    0x2a"
  44.      ft_printf("%#08x", 42);                       -> "0x00002a"
  45. FAIL ft_printf("%#-08x", 42);                      -> "0x2a    "
  46. FAIL ft_printf("@moulitest: %#.x %#.0x", 0, 0);    -> "@moulitest:  "
  47.      ft_printf("@moulitest: %.x %.0x", 0, 0);      -> "@moulitest:  "
  48.      ft_printf("@moulitest: %5.x %5.0x", 0, 0);    -> "@moulitest:            "
  49. FAIL ft_printf("%s", "abc");                       -> "abc"
  50. FAIL ft_printf("%s", "this is a string");          -> "this is a string"
  51. FAIL ft_printf("%s ", "this is a string");         -> "this is a string "
  52. FAIL ft_printf("%s  ", "this is a string");        -> "this is a string  "
  53. FAIL ft_printf("this is a %s", "string");          -> "this is a string"
  54. FAIL ft_printf("%s is a string", "this");          -> "this is a string"
  55. FAIL ft_printf("Line Feed %s", "\\n");             -> "Line Feed \\n"
  56. FAIL ft_printf("%10s is a string", "this");        -> "      this is a string"
  57. FAIL ft_printf("%.2s is a string", "this");        -> "th is a string"
  58. FAIL ft_printf("%5.2s is a string", "this");       -> "   th is a string"
  59. FAIL ft_printf("%10s is a string", "");            -> "           is a string"
  60. FAIL ft_printf("%.2s is a string", "");            -> " is a string"
  61. FAIL ft_printf("%5.2s is a string", "");           -> "      is a string"
  62. FAIL ft_printf("%-10s is a string", "this");       -> "this       is a string"
  63. FAIL ft_printf("%-.2s is a string", "this");       -> "th is a string"
  64. FAIL ft_printf("%-5.2s is a string", "this");      -> "th    is a string"
  65. FAIL ft_printf("%-10s is a string", "");           -> "           is a string"
  66. FAIL ft_printf("%-.2s is a string", "");           -> " is a string"
  67. FAIL ft_printf("%-5.2s is a string", "");          -> "      is a string"
  68. FAIL ft_printf("%s %s", "this", "is");             -> "this is"
  69. FAIL ft_printf("%s %s %s", "this", "is", "a");     -> "this is a"
  70. FAIL ft_printf("%s %s %s %s", "this", "is", "a", "multi"); -> "this is a multi"
  71. FAIL ft_printf("%s %s %s %s string. gg!", "this", "is", "a", "multi", "string"); -> "this is a multi string. gg!"
  72. FAIL ft_printf("%s%s%s%s%s", "this", "is", "a", "multi", "string"); -> "thisisamultistring"
  73. FAIL ft_printf("@moulitest: %s", NULL);            -> "@moulitest: (null)"
  74. FAIL ft_printf("%.2c", NULL);                      -> "^@"
  75. FAIL ft_printf("%s %s", NULL, string);             -> "(null) string"
  76. FAIL ft_printf("%c", 42);                          -> "*"
  77. FAIL ft_printf("%5c", 42);                         -> "    *"
  78. FAIL ft_printf("%-5c", 42);                        -> "*    "
  79. FAIL ft_printf("@moulitest: %c", 0);               -> "@moulitest: ^@"
  80. FAIL ft_printf("%2c", 0);                          -> " ^@"
  81. FAIL ft_printf("null %c and text", 0);             -> "null ^@ and text"
  82. FAIL ft_printf("% c", 0);                          -> "^@"
  83.      ft_printf("%o", 40);                          -> "50"
  84.      ft_printf("%5o", 41);                         -> "   51"
  85.      ft_printf("%05o", 42);                        -> "00052"
  86.      ft_printf("%-5o", 2500);                      -> "4704 "
  87.      ft_printf("%#6o", 2500);                      -> " 04704"
  88.      ft_printf("%-#6o", 2500);                     -> "04704 "
  89. FAIL ft_printf("%-05o", 2500);                     -> "4704 "
  90.      ft_printf("%-5.10o", 2500);                   -> "0000004704"
  91.      ft_printf("%-10.5o", 2500);                   -> "04704     "
  92.      ft_printf("@moulitest: %o", 0);               -> "@moulitest: 0"
  93.      ft_printf("@moulitest: %.o %.0o", 0, 0);      -> "@moulitest:  "
  94.      ft_printf("@moulitest: %5.o %5.0o", 0, 0);    -> "@moulitest:            "
  95. FAIL ft_printf("@moulitest: %#.o %#.0o", 0, 0);    -> "@moulitest: 0 0"
  96.      ft_printf("@moulitest: %.10o", 42);           -> "@moulitest: 0000000052"
  97.      ft_printf("%d", 1);                           -> "1"
  98.      ft_printf("the %d", 1);                       -> "the 1"
  99.      ft_printf("%d is one", 1);                    -> "1 is one"
 100.      ft_printf("%d", -1);                          -> "-1"
 101.      ft_printf("%d", 4242);                        -> "4242"
 102.      ft_printf("%d", -4242);                       -> "-4242"
 103.      ft_printf("%d", 2147483647);                  -> "2147483647"
 104. FAIL ft_printf("%d", 2147483648);                  -> "-2147483648"
 105. FAIL ft_printf("%d", -2147483648);                 -> "-2147483648"
 106.      ft_printf("%d", -2147483649);                 -> "2147483647"
 107.      ft_printf("% d", 42);                         -> " 42"
 108.      ft_printf("% d", -42);                        -> "-42"
 109.      ft_printf("%+d", 42);                         -> "+42"
 110.      ft_printf("%+d", -42);                        -> "-42"
 111.      ft_printf("%+d", 0);                          -> "+0"
 112.      ft_printf("%+d", 4242424242424242424242);     -> "-1"
 113.      ft_printf("% +d", 42);                        -> "+42"
 114.      ft_printf("% +d", -42);                       -> "-42"
 115.      ft_printf("%+ d", 42);                        -> "+42"
 116.      ft_printf("%+ d", -42);                       -> "-42"
 117.      ft_printf("%  +d", 42);                       -> "+42"
 118.      ft_printf("%  +d", -42);                      -> "-42"
 119.      ft_printf("%+  d", 42);                       -> "+42"
 120.      ft_printf("%+  d", -42);                      -> "-42"
 121.      ft_printf("% ++d", 42);                       -> "+42"
 122.      ft_printf("% ++d", -42);                      -> "-42"
 123.      ft_printf("%++ d", 42);                       -> "+42"
 124.      ft_printf("%++ d", -42);                      -> "-42"
 125.      ft_printf("%0d", -42);                        -> "-42"
 126.      ft_printf("%00d", -42);                       -> "-42"
 127.      ft_printf("%5d", 42);                         -> "   42"
 128.      ft_printf("%05d", 42);                        -> "00042"
 129.      ft_printf("%0+5d", 42);                       -> "+0042"
 130.      ft_printf("%5d", -42);                        -> "  -42"
 131.      ft_printf("%05d", -42);                       -> "-0042"
 132.      ft_printf("%0+5d", -42);                      -> "-0042"
 133.      ft_printf("%-5d", 42);                        -> "42   "
 134. FAIL ft_printf("%-05d", 42);                       -> "42   "
 135.      ft_printf("%-5d", -42);                       -> "-42  "
 136. FAIL ft_printf("%-05d", -42);                      -> "-42  "
 137.      ft_printf("%hd", 32767);                      -> "32767"
 138.      ft_printf("%hd", −32768);                   -> "0"
 139. FAIL ft_printf("%hd", 32768);                      -> "-32768"
 140.      ft_printf("%hd", −32769);                   -> "0"
 141.      ft_printf("%hhd", 127);                       -> "127"
 142. FAIL ft_printf("%hhd", 128);                       -> "-128"
 143.      ft_printf("%hhd", -128);                      -> "-128"
 144. FAIL ft_printf("%hhd", -129);                      -> "127"
 145. FAIL ft_printf("%ld", 2147483647);                 -> "2147483647"
 146. FAIL ft_printf("%ld", -2147483648);                -> "-2147483648"
 147. FAIL ft_printf("%ld", 2147483648);                 -> "2147483648"
 148. FAIL ft_printf("%ld", -2147483649);                -> "-2147483649"
 149. FAIL ft_printf("%lld", 9223372036854775807);       -> "9223372036854775807"
 150. FAIL ft_printf("%lld", -9223372036854775808);      -> "-9223372036854775808"
 151. FAIL ft_printf("%jd", 9223372036854775807);        -> "9223372036854775807"
 152. FAIL ft_printf("%jd", -9223372036854775808);       -> "-9223372036854775808"
 153. FAIL ft_printf("%zd", 4294967295);                 -> "4294967295"
 154. FAIL ft_printf("%zd", 4294967296);                 -> "4294967296"
 155.      ft_printf("%zd", -0);                         -> "0"
 156.      ft_printf("%zd", -1);                         -> "-1"
 157.      ft_printf("%d", 1);                           -> "1"
 158.      ft_printf("%d %d", 1, -2);                    -> "1 -2"
 159.      ft_printf("%d %d %d", 1, -2, 33);             -> "1 -2 33"
 160.      ft_printf("%d %d %d %d", 1, -2, 33, 42);      -> "1 -2 33 42"
 161.      ft_printf("%d %d %d %d gg!", 1, -2, 33, 42, 0); -> "1 -2 33 42 gg!"
 162.      ft_printf("%4.15d", 42);                      -> "000000000000042"
 163.      ft_printf("%.2d", 4242);                      -> "4242"
 164.      ft_printf("%.10d", 4242);                     -> "0000004242"
 165.      ft_printf("%10.5d", 4242);                    -> "     04242"
 166.      ft_printf("%-10.5d", 4242);                   -> "04242     "
 167.      ft_printf("% 10.5d", 4242);                   -> "     04242"
 168.      ft_printf("%+10.5d", 4242);                   -> "    +04242"
 169.      ft_printf("%-+10.5d", 4242);                  -> "+04242    "
 170. FAIL ft_printf("%03.2d", 0);                       -> " 00"
 171. FAIL ft_printf("%03.2d", 1);                       -> " 01"
 172.      ft_printf("%03.2d", -1);                      -> "-01"
 173.      ft_printf("@moulitest: %.10d", -42);          -> "@moulitest: -0000000042"
 174.      ft_printf("@moulitest: %.d %.0d", 42, 43);    -> "@moulitest: 42 43"
 175.      ft_printf("@moulitest: %.d %.0d", 0, 0);      -> "@moulitest:  "
 176.      ft_printf("@moulitest: %5.d %5.0d", 0, 0);    -> "@moulitest:            "
 177.      ft_printf("%u", 0);                           -> "0"
 178.      ft_printf("%u", 1);                           -> "1"
 179.      ft_printf("%u", -1);                          -> "4294967295"
 180.      ft_printf("%u", 4294967295);                  -> "4294967295"
 181.      ft_printf("%u", 4294967296);                  -> "0"
 182.      ft_printf("%5u", 4294967295);                 -> "4294967295"
 183.      ft_printf("%15u", 4294967295);                -> "     4294967295"
 184.      ft_printf("%-15u", 4294967295);               -> "4294967295     "
 185.      ft_printf("%015u", 4294967295);               -> "000004294967295"
 186. FAIL ft_printf("% u", 4294967295);                 -> "4294967295"
 187. FAIL ft_printf("%+u", 4294967295);                 -> "4294967295"
 188. FAIL ft_printf("%lu", 4294967295);                 -> "4294967295"
 189. FAIL ft_printf("%lu", 4294967296);                 -> "4294967296"
 190. FAIL ft_printf("%lu", -42);                        -> "18446744073709551574"
 191. FAIL ft_printf("%llu", 4999999999);                -> "4999999999"
 192. FAIL ft_printf("%ju", 4999999999);                 -> "4999999999"
 193. FAIL ft_printf("%ju", 4294967296);                 -> "4294967296"
 194. FAIL ft_printf("%U", 4294967295);                  -> "%U"
 195. FAIL ft_printf("%hU", 4294967296);                 -> "%U"
 196. FAIL ft_printf("%U", 4294967296);                  -> "%U"
 197.      ft_printf("@moulitest: %.5u", 42);            -> "@moulitest: 00042"
